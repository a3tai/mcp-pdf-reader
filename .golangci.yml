# golangci-lint configuration for mcp-pdf-reader
# Compatible with golangci-lint v1.x
# Based on best practices for Go projects

run:
  timeout: 5m
  tests: true
  modules-download-mode: readonly
  allow-parallel-runners: true
  go: "1.24"

linters-settings:
  # govet configuration
  govet:
    enable:
      - atomicalign
      - deepequalerrors
      - findcall
      - nilness
      - reflectvaluecompare
      - sortslice
      - timeformat
      - unusedwrite
    disable:
      - shadow # Too noisy for this project
      - fieldalignment # Performance optimization that doesn't affect functionality

  # gocyclo configuration
  gocyclo:
    min-complexity: 15

  # dupl configuration
  dupl:
    threshold: 100

  # goconst configuration
  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: true

  # misspell configuration
  misspell:
    locale: US

  # lll (line length limit) configuration
  lll:
    line-length: 120

  # goimports configuration
  goimports:
    local-prefixes: github.com/a3tai/mcp-pdf-reader

  # gocritic configuration
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
    disabled-checks:
      - unnamedResult
      - hugeParam
      - commentedOutCode

  # revive configuration
  revive:
    severity: warning
    rules:
      - name: exported
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"
      - name: package-comments
        disabled: true
      - name: exported
        disabled: true

  # staticcheck configuration
  staticcheck:
    checks: ["all"]

  # unused configuration
  unused: {}

  # gosec configuration
  gosec:
    excludes:
      - G204 # Subprocess launched with variable - needed for MCP functionality
      - G304 # File path provided as taint input - we validate paths appropriately

  # errcheck configuration
  errcheck:
    check-type-assertions: true
    check-blank: false
    exclude-functions:
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)

  # funlen configuration
  funlen:
    lines: 100
    statements: 50

  # gocognit configuration
  gocognit:
    min-complexity: 20

  # nestif configuration
  nestif:
    min-complexity: 8

  # cyclop configuration
  cyclop:
    max-complexity: 30
    package-average: 10.0

  # mnd (magic number detector) configuration
  mnd:
    ignored-numbers: ["1", "2", "10", "100", "1000", "1024"]
    ignored-functions:
      - args.Error
      - flag.Arg
      - flag.Duration.*
      - flag.Float.*
      - flag.Int.*
      - flag.Uint.*
      - os.Chmod
      - os.Mkdir.*
      - os.OpenFile
      - os.WriteFile

  # nolintlint configuration
  nolintlint:
    allow-unused: false
    require-explanation: true
    require-specific: true

linters:
  enable:
    # Code quality and correctness
    - govet
    - errcheck
    - staticcheck
    - unused
    - gosimple
    - typecheck

    # Style and formatting
    - gofmt
    - misspell
    - lll
    - whitespace
    - gofumpt

    # Complexity and maintainability
    - gocyclo
    - dupl
    - goconst
    - funlen
    - gocognit
    - nestif
    - cyclop

    # Security
    - gosec

    # Performance
    - prealloc
    - bodyclose

    # Best practices
    - gocritic
    - revive
    - unconvert
    - unparam
    - ineffassign
    - wastedassign

    # Error handling
    - errorlint
    - wrapcheck

    # Additional useful linters
    - asciicheck
    - bidichk
    - durationcheck
    - errname
    - exhaustive
    - forbidigo
    - gomoddirectives
    - goprintffuncname
    - makezero
    - mnd
    - nakedret
    - nilerr
    - nolintlint
    - predeclared
    - rowserrcheck
    - tparallel

  disable:
    # Disabled linters (too strict or not needed for this project)
    - gochecknoglobals
    - gochecknoinits
    - godot
    - godox

    - ireturn
    - nlreturn
    - nonamedreturns
    - paralleltest
    - tagliatelle
    - varnamelen
    - wsl

    # Test package naming convention (stylistic preference)
    - testpackage

    # Import formatting (conflicts with gofumpt)
    - goimports
    - gci

issues:
  max-issues-per-linter: 50
  max-same-issues: 10
  uniq-by-line: true

  exclude-rules:
    # Exclude some linters from test files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - gocognit
        - nestif
        - lll
        - wrapcheck
        - bodyclose
        - goconst
        - forbidigo
        - cyclop

    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Allow fmt.Printf in main function for version output
    - path: cmd/mcp-pdf-reader/main.go
      text: "use of `fmt.Printf`"
      linters:
        - forbidigo

    # Ignore complexity in main function
    - path: cmd/
      text: "main function"
      linters:
        - gocyclo
        - gocognit
        - cyclop

    # Allow longer functions in tests
    - path: _test\.go
      text: "Function 'Test.*' is too long"
      linters:
        - funlen

  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    # gosec: Too many false-positives on 'unsafe' usage
    - G103
    # gosec: Duplicated errcheck checks
    - G104

output:
  print-issued-lines: true
  print-linter-name: true
  sort-results: true
